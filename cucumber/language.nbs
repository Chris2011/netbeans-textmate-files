# definition of tokens
TOKEN:keyword:( "Feature" | "Scenario" | "In order" | "As a" | "As an" | "I want" | "Given" | "When" | "Then" | "And" | "I have" )

# all that follows is useful for mostly all languages
TOKEN:identifier: ( ["a"-"z" "A"-"Z"] ["a"-"z" "A"-"Z" "0"-"9" "_"]* )
TOKEN:number: (["0"-"9"]*)
TOKEN:operator: ( ":" | "*" | "?" | "+" | "-" | "[" | "]" | "<" | ">" | "^" | "|" | "{" | "}" | "(" | ")" | "=" | ";" | "." | "$" )
TOKEN:subject: ( ":" ( [" " "0"-"9" "a"-"z" "A"-"Z"] )* )
TOKEN:string:( "\"" ( [^ "\"" "\\" "\r" "\n"] | ("\\" ["r" "n" "t" "\\" "\'" "\""]) | ("\\" "u" ["0"-"9" "a"-"f" "A"-"F"] ["0"-"9" "a"-"f" "A"-"F"] ["0"-"9" "a"-"f" "A"-"F"] ["0"-"9" "a"-"f" "A"-"F"]) )* "\"" )
TOKEN:comma:( "," )
TOKEN:whitespace:( [" " "\t" "\n" "\r"]+ )
TOKEN:comment: ("/*" | "#" ):<IN_COMMENT>
<IN_COMMENT> {
    TOKEN:comment: (.)
    TOKEN:comment: ("*/" | ["\n"] ):<DEFAULT>
}

TOKEN:comment: ( "//"[^ "\n" "\r"]* | "#"[^ "\n" "\r"]* )
#S = Statement*;
#Statement = WhileStatement | IfStatement | DeclarationStatement | Assignment | BlockStatement;

# parser should ignore
SKIP:whitespace
SKIP:comment
SKIP:comma

# brace completion
COMPLETE "{:}"
COMPLETE "(:)"
COMPLETE "\":\""
COMPLETE "\':\'"

# brace matching
BRACE "{:}"
BRACE "(:)"

# indentation support
INDENT "{:}"
INDENT "(:)"
