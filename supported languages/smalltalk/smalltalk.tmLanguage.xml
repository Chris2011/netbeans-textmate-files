<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>fileTypes</key>
        <array>
            <string>st</string>
        </array>
        <key>foldingStartMarker</key>
        <string>\[</string>
        <key>foldingStopMarker</key>
        <string>^\s*\]|^\s\]</string>
        <key>keyEquivalent</key>
        <string>^~S</string>
        <key>name</key>
        <string>Smalltalk</string>
        <key>patterns</key>
        <array>
            <dict>
                <key>match</key>
                <string>\b(super|self|yourself|new|extend|class|Smalltalk)\b</string>
                <key>name</key>
                <string>keyword.language.smalltalk</string>
            </dict>
            <dict>
                <key>match</key>
                <string>:=</string>
                <key>name</key>
                <string>keyword.operator.assignment.smalltalk</string>
            </dict>
            <dict>
                <key>comment</key>
                <string>Parse the variable declaration like: |a b c|</string>
                <key>match</key>
                <string>/^:\w*\s*\|/</string>
                <key>name</key>
                <string>constant.other.block.smalltalk</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.separator.variable.smalltalk</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>support.type.variable.declaration.smalltalk</string>
                    </dict>
                    <key>3</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.separator.variable.smalltalk</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>(\|)+([\w\ ]+)+(\|)</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.function.block.smalltalk</string>
                    </dict>
                </dict>
                <key>comment</key>
                <string>Parse the blocks like: [ :a :b | ...... ]</string>
                <key>match</key>
                <string>\[\s{0,}(:{1,}[\w\ ]+.*\|)</string>
            </dict>
            <dict>
                <key>match</key>
                <string>&lt;(?!&lt;|=)|&gt;(?!&lt;|=|&gt;)|&lt;=|&gt;=|=|==|~=|~~|&gt;&gt;|\^</string>
                <key>name</key>
                <string>keyword.operator.comparison.smalltalk</string>
            </dict>
            <dict>
                <key>match</key>
                <string>(\*|\+|\-|/|\\)</string>
                <key>name</key>
                <string>keyword.operator.arithmetic.smalltalk</string>
            </dict>
            <dict>
                <key>match</key>
                <string>(?&lt;=[ \t])!+|\bnot\b|&amp;|\band\b|\||\bor\b</string>
                <key>name</key>
                <string>keyword.operator.logical.smalltalk</string>
            </dict>
            <dict>
                <key>comment</key>
                <string>Fake reserved word -&gt; main Smalltalk messages</string>
                <key>match</key>
                <string>(?&lt;!\.)\b(ensure|resume|retry|signal)\b(?![?!])</string>
                <key>name</key>
                <string>keyword.control.smalltalk</string>
            </dict>
            <dict>
                <key>comment</key>
                <string>Fake conditionals. Smalltalk Methods.</string>
                <key>match</key>
                <string>ifCurtailed:|ifTrue:|ifFalse:|whileFalse:|whileTrue:</string>
                <key>name</key>
                <string>keyword.control.conditionals.smalltalk</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>entity.other.inherited-class.smalltalk</string>
                    </dict>
                    <key>2</key>
                    <dict>
                        <key>name</key>
                        <string>keyword.control.smalltalk</string>
                    </dict>
                    <key>4</key>
                    <dict>
                        <key>name</key>
                        <string>entity.name.type.class.smalltalk</string>
                    </dict>
                </dict>
                <key>match</key>
                <string>(\w*\s)+(\s*(subclass:))+\s*(\w*)</string>
                <key>name</key>
                <string>meta.class.smalltalk</string>
            </dict>
            <dict>
                <key>begin</key>
                <string>"</string>
                <key>end</key>
                <string>"</string>
                <key>name</key>
                <string>comment.language.smalltalk</string>
            </dict>
            <dict>
                <key>match</key>
                <string>\b(true|false|nil)\b</string>
                <key>name</key>
                <string>constant.language.smalltalk</string>
            </dict>
            <dict>
                <key>captures</key>
                <dict>
                    <key>1</key>
                    <dict>
                        <key>name</key>
                        <string>punctuation.definition.constant.smalltalk</string>
                    </dict>
                </dict>
                <key>comment</key>
                <string>messages/methods</string>
                <key>match</key>
                <string>(?&gt;[a-zA-Z_]\w*(?&gt;[?!])?)(:)(?!:)</string>
                <key>name</key>
                <string>constant.other.messages.smalltalk</string>
            </dict>
            <dict>
                <key>comment</key>
                <string>symbols</string>
                <key>match</key>
                <string>#[a-zA-Z_][a-zA-Z0-9_:]*</string>
                <key>name</key>
                <string>constant.other.symbol.smalltalk</string>
            </dict>
            <dict>
                <key>begin</key>
                <string>#\[</string>
                <key>comment</key>
                <string>ByteArray Constructor. Unfortunely this dont validate only numbers. TODO.</string>
                <key>end</key>
                <string>\]</string>
                <key>name</key>
                <string>constant.other.bytearray.smalltalk</string>
            </dict>
            <dict>
                <key>begin</key>
                <string>#\(</string>
                <key>comment</key>
                <string>Array Constructor</string>
                <key>end</key>
                <string>\)</string>
                <key>name</key>
                <string>constant.other.array.smalltalk</string>
            </dict>
            <dict>
                <key>begin</key>
                <string>'</string>
                <key>end</key>
                <string>'</string>
                <key>name</key>
                <string>string.smalltalk</string>
            </dict>
            <dict>
                <key>match</key>
                <string>\b(0[xX]\h(?&gt;_?\h)*|\d(?&gt;_?\d)*(\.(?![^[:space:][:digit:]])(?&gt;_?\d)*)?([eE][-+]?\d(?&gt;_?\d)*)?|0[bB][01]+)\b</string>
                <key>name</key>
                <string>constant.numeric.smalltalk</string>
            </dict>
            <dict>
                <key>match</key>
                <string>\b[A-Z]\w*\b</string>
                <key>name</key>
                <string>variable.other.constant.smalltalk</string>
            </dict>
        </array>
        <key>scopeName</key>
        <string>source.smalltalk</string>
        <key>uuid</key>
        <string>1ED64A34-BCB1-44E1-A0FE-84053003E232</string>
    </dict>
</plist>
